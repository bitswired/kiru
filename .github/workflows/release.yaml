name: Build and Release

on:
    push:
        branches: [main]
        tags: ["*"]
    pull_request:
    workflow_dispatch:

permissions:
    contents: read
    id-token: write # For PyPI OIDC publishing
    attestations: write # For artifact attestation

jobs:
    build-wheels-linux:
        runs-on: ${{ matrix.platform.runner }}
        steps:
            - uses: actions/checkout@v4
            - name: Wait for tests to succeed
              uses: lewagon/wait-on-check-action@v1.4.1
              with:
                  ref: ${{ github.ref }}
                  check-name: test
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
                  wait-interval: 10
            - uses: actions/setup-python@v5
              with:
                  python-version: 3.x
            - name: Cache Cargo
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: ${{ runner.os }}-cargo-
            - name: Build wheels
              uses: PyO3/maturin-action@v1
              with:
                  working-directory: kiru-py
                  target: ${{ matrix.platform.target }}
                  args: --release --out dist --find-interpreter
                  sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
                  manylinux: auto
            - name: Upload wheels
              uses: actions/upload-artifact@v4
              with:
                  name: wheels-linux-${{ matrix.platform.target }}
                  path: kiru-py/dist
        strategy:
            matrix:
                platform:
                    - runner: ubuntu-22.04
                      target: x86_64
                    - runner: ubuntu-22.04
                      target: x86
                    - runner: ubuntu-22.04
                      target: aarch64
                    - runner: ubuntu-22.04
                      target: armv7
                    - runner: ubuntu-22.04
                      target: s390x
                    - runner: ubuntu-22.04
                      target: ppc64le

    build-wheels-musllinux:
        runs-on: ${{ matrix.platform.runner }}
        steps:
            - uses: actions/checkout@v4
            - name: Wait for tests to succeed
              uses: lewagon/wait-on-check-action@v1.4.1
              with:
                  ref: ${{ github.ref }}
                  check-name: test
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
                  wait-interval: 10
            - uses: actions/setup-python@v5
              with:
                  python-version: 3.x
            - name: Cache Cargo
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: ${{ runner.os }}-cargo-
            - name: Build wheels
              uses: PyO3/maturin-action@v1
              with:
                  working-directory: kiru-py
                  target: ${{ matrix.platform.target }}
                  args: --release --out dist --find-interpreter
                  sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
                  manylinux: musllinux_1_2
            - name: Upload wheels
              uses: actions/upload-artifact@v4
              with:
                  name: wheels-musllinux-${{ matrix.platform.target }}
                  path: kiru-py/dist
        strategy:
            matrix:
                platform:
                    - runner: ubuntu-22.04
                      target: x86_64
                    - runner: ubuntu-22.04
                      target: x86
                    - runner: ubuntu-22.04
                      target: aarch64
                    - runner: ubuntu-22.04
                      target: armv7

    build-wheels-windows:
        runs-on: ${{ matrix.platform.runner }}
        steps:
            - uses: actions/checkout@v4
            - name: Wait for tests to succeed
              uses: lewagon/wait-on-check-action@v1.4.1
              with:
                  ref: ${{ github.ref }}
                  check-name: test
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
                  wait-interval: 10
            - uses: actions/setup-python@v5
              with:
                  python-version: 3.x
                  architecture: ${{ matrix.platform.target }}
            - name: Cache Cargo
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: ${{ runner.os }}-cargo-
            - name: Build wheels
              uses: PyO3/maturin-action@v1
              with:
                  working-directory: kiru-py
                  target: ${{ matrix.platform.target }}
                  args: --release --out dist --find-interpreter
                  sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
            - name: Upload wheels
              uses: actions/upload-artifact@v4
              with:
                  name: wheels-windows-${{ matrix.platform.target }}
                  path: kiru-py/dist
        strategy:
            matrix:
                platform:
                    - runner: windows-latest
                      target: x64
                    - runner: windows-latest
                      target: x86

    build-wheels-macos:
        runs-on: ${{ matrix.platform.runner }}
        steps:
            - uses: actions/checkout@v4
            - name: Wait for tests to succeed
              uses: lewagon/wait-on-check-action@v1.4.1
              with:
                  ref: ${{ github.ref }}
                  check-name: test
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
                  wait-interval: 10
            - uses: actions/setup-python@v5
              with:
                  python-version: 3.x
            - name: Cache Cargo
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: ${{ runner.os }}-cargo-
            - name: Build wheels
              uses: PyO3/maturin-action@v1
              with:
                  working-directory: kiru-py
                  target: ${{ matrix.platform.target }}
                  args: --release --out dist --find-interpreter
                  sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
            - name: Upload wheels
              uses: actions/upload-artifact@v4
              with:
                  name: wheels-macos-${{ matrix.platform.target }}
                  path: kiru-py/dist
        strategy:
            matrix:
                platform:
                    - runner: macos-13
                      target: x86_64
                    - runner: macos-14
                      target: aarch64

    build-sdist:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Wait for tests to succeed
              uses: lewagon/wait-on-check-action@v1.4.1
              with:
                  ref: ${{ github.ref }}
                  check-name: test
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
                  wait-interval: 10
            - uses: actions/setup-python@v5
              with:
                  python-version: 3.x
            - name: Build sdist
              uses: PyO3/maturin-action@v1
              with:
                  working-directory: kiru-py
                  command: sdist
                  args: --out dist
            - name: Upload sdist
              uses: actions/upload-artifact@v4
              with:
                  name: wheels-sdist
                  path: kiru-py/dist

    build-crate:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Wait for tests to succeed
              uses: lewagon/wait-on-check-action@v1.4.1
              with:
                  ref: ${{ github.ref }}
                  check-name: test
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
                  wait-interval: 10
            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
            - name: Package kiru-core
              run: cargo package -p kiru-core
            - name: Upload crate
              uses: actions/upload-artifact@v4
              with:
                  name: crate-kiru-core
                  path: target/package/kiru-*.crate

    release:
        runs-on: ubuntu-latest
        if: startsWith(github.ref, 'refs/tags/')
        needs:
            [
                build-wheels-linux,
                build-wheels-musllinux,
                build-wheels-windows,
                build-wheels-macos,
                build-sdist,
                build-crate,
            ]
        permissions:
            contents: write
            id-token: write
            attestations: write
        steps:
            - uses: actions/checkout@v4
            - name: Wait for tests to succeed
              uses: lewagon/wait-on-check-action@v1.4.1
              with:
                  ref: ${{ github.ref }}
                  check-name: test
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
                  wait-interval: 10
            - uses: actions/download-artifact@v4
            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v2
              with:
                  subject-path: "wheels-*/*"
            - name: Publish kiru-core to crates.io
              env:
                  CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
              run: cargo publish -p kiru-core
            - name: Publish kiru-py to PyPI
              uses: PyO3/maturin-action@v1
              env:
                  MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
              with:
                  working-directory: kiru-py
                  command: upload
                  args: --non-interactive --skip-existing wheels-*/*
            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  files: |
                      wheels-*/*
                      crate-kiru-core/*
